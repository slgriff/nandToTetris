// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=lr1, b=lr2, c=lr3, d=lr4, e=lr5, f=lr6, g=lr7, h=lr8);
    RAM8(in=in, load=lr1, address=address[0..2], out=or1);
    RAM8(in=in, load=lr2, address=address[0..2], out=or2);
    RAM8(in=in, load=lr3, address=address[0..2], out=or3);
    RAM8(in=in, load=lr4, address=address[0..2], out=or4);
    RAM8(in=in, load=lr5, address=address[0..2], out=or5);
    RAM8(in=in, load=lr6, address=address[0..2], out=or6);
    RAM8(in=in, load=lr7, address=address[0..2], out=or7);
    RAM8(in=in, load=lr8, address=address[0..2], out=or8);
    Mux8Way16(a=or1, b=or2, c=or3, d=or4, e=or5, f=or6, g=or7, h=or8, sel=address[3..5], out=out);
}